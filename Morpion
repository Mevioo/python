import tkinter as tk
from tkinter import messagebox

# Classe principale pour le jeu de Morpion
class MorpionApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Jeu de Morpion")
        
        # Variables pour le joueur actuel et l'état du plateau
        self.current_player = "X"
        self.board = [["-" for _ in range(3)] for _ in range(3)]
        
        # Labels pour les joueurs
        self.label_joueur1 = tk.Label(root, text="Joueur 1 [X]", font=("Arial", 14))
        self.label_joueur1.grid(row=0, column=0, columnspan=2)
        self.label_joueur2 = tk.Label(root, text="Joueur 2 [O]", font=("Arial", 14))
        self.label_joueur2.grid(row=0, column=2, columnspan=2)
        
        # Grille de boutons
        self.buttons = [[None for _ in range(3)] for _ in range(3)]
        for i in range(3):
            for j in range(3):
                self.buttons[i][j] = tk.Button(
                    root,
                    text="-",
                    font=("Arial", 24),
                    width=5,
                    height=2,
                    command=lambda x=i, y=j: self.make_move(x, y)
                )
                self.buttons[i][j].grid(row=i+1, column=j)
        
        # Bouton de remise à zéro
        self.reset_button = tk.Button(root, text="Remise à zéro", font=("Arial", 14), command=self.reset_game)
        self.reset_button.grid(row=4, column=0, columnspan=3)

    def make_move(self, x, y):
        # Vérifie si la case est vide
        if self.board[x][y] == "-":
            self.board[x][y] = self.current_player
            self.buttons[x][y].config(text=self.current_player)
            
            # Vérifie les règles du jeu
            if self.check_winner():
                messagebox.showinfo("Fin de partie", f"Le joueur {self.current_player} a gagné !")
                self.reset_game()
                return
            
            # Alterne les joueurs
            self.current_player = "O" if self.current_player == "X" else "X"
        else:
            messagebox.showwarning("Coup invalide", "Cette case est déjà occupée !")
    
    def reset_game(self):
        # Réinitialise le plateau et les boutons
        self.board = [["-" for _ in range(3)] for _ in range(3)]
        for i in range(3):
            for j in range(3):
                self.buttons[i][j].config(text="-")
        self.current_player = "X"

    def check_winner(self):
        # Vérifie les lignes, colonnes et diagonales pour une condition de victoire
        for i in range(3):
            # Vérifie les lignes
            if self.board[i][0] == self.board[i][1] == self.board[i][2] != "-":
                return True
            # Vérifie les colonnes
            if self.board[0][i] == self.board[1][i] == self.board[2][i] != "-":
                return True
        
        # Vérifie les diagonales
        if self.board[0][0] == self.board[1][1] == self.board[2][2] != "-":
            return True
        if self.board[0][2] == self.board[1][1] == self.board[2][0] != "-":
            return True
        
        return False

# Lancer l'application
if __name__ == "__main__":
    root = tk.Tk()
    app = MorpionApp(root)
    root.mainloop()
